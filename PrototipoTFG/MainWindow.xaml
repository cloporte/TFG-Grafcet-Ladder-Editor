<Window x:Class="PrototipoTFG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PrototipoTFG"
        xmlns:localLeft="clr-namespace:PrototipoTFG.Left_Edition_Panel"
        Title="Prototipo" Height="700" Width="900" MinWidth="700" MinHeight="700" x:Name="view">
    <DockPanel>
        <localLeft:ButtonsPanel DockPanel.Dock="Top"/>
        <StackPanel Width="150" DockPanel.Dock="Left" Margin="5,0,0,0">
            <Expander Header="Options" IsExpanded="True"
                      BorderBrush="LightGray" BorderThickness="1">
                <localLeft:ParametersEditor/>
            </Expander>
            <Expander Content="{Binding SelectedObject}"
                      Header="{Binding SelectedObject.Name,FallbackValue='[Select an Element]'}" 
                      Margin="2,2,2,10" BorderThickness="1" BorderBrush="LightGray"
                      IsExpanded="True" FontWeight="Bold">
                <Expander.Resources>
                    <DataTemplate DataType="{x:Type local:LogicElement}">
                        <localLeft:NodePropertyEditor/>
                    </DataTemplate> 
                    <DataTemplate DataType="{x:Type local:Connector}">
                        <localLeft:ConnectorPropertyEditor/>
                    </DataTemplate>
                </Expander.Resources>
            </Expander>
        </StackPanel>
        <Grid Margin="10">
            <Grid.Resources>
                <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                <!-- This CompositeCollection basically Concatenates the Elements in a single one -->
                <CompositeCollection x:Key="Col">
                    <CollectionContainer Collection="{Binding DataContext.Connectors,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Nodes,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Transitions,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.InterNodes,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Inputs,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Outputs,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.NotInputs,Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.NotOutputs,Source={x:Reference view}}"/>
                </CompositeCollection>

                <!-- This is the DataTemplate that will be used to render the Node class -->
                
                <DataTemplate DataType="{x:Type local:Node}">
                    <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-20,-20,20,20">
                                    <Rectangle Height="40" Width="40" Stroke="Black" StrokeThickness="1" Fill="White"
                                             x:Name="Rectangle">
                                    </Rectangle>
                                    <TextBlock Canvas.Top="10" Canvas.Left="-30" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>
                
                <!-- This is the DataTemplate that will be used to render the Transition class -->
                
                <DataTemplate DataType="{x:Type local:Transition}">
                    <Thumb DragDelta="Thumb_DragTransitions" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-20,-10,20,10">
                                    <Rectangle Height="10" Width="40" Stroke="Black" StrokeThickness="1" Fill="Black"
                                             x:Name="Rectangle">
                                    </Rectangle>
                                    <TextBlock Canvas.Top="10" Canvas.Left="10" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>
                 
                <!-- This is the DataTemplate that will be used to render the InterNode class -->
                
                <DataTemplate DataType="{x:Type local:InterNode}">
                    <Thumb DragDelta="Thumb_DragInterNodes" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-5,-5,5,5">
                                    <Rectangle Height="10" Width="10" Stroke="Blue" StrokeThickness="1" Fill="Blue"
                                             x:Name="Rectangle">
                                    </Rectangle>                                    
                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>

                <!-- This is the DataTemplate that will be used to render the InputLadder class -->
                <DataTemplate DataType="{x:Type local:InputLadder}">
                    <Thumb DragDelta="Thumb_DragInputs" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-20,-20,20,20">
                                    <!-- Input design -->
                                    <Canvas Height="45" Width="45">
                                        <Rectangle Name="Rectangle" Height="35" Width="30" Stroke="Black" StrokeThickness="1" Fill="Black" Canvas.Top="5" Canvas.Left="8"></Rectangle>
                                        <Rectangle Height="30" Width="24" Stroke="Black" StrokeThickness="1" Fill="White" Canvas.Top="8" Canvas.Left="11"></Rectangle>
                                        <Rectangle Height="35" Width="12" Stroke="White" StrokeThickness="1" Fill="White" Canvas.Top="5" Canvas.Left="17"></Rectangle>                                                                            
                                    </Canvas>
                                    <!-- /Input design-->
                                    <TextBlock Canvas.Top="30" Canvas.Left="5" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>

                <!-- NotInputLadder-->

                <DataTemplate DataType="{x:Type local:NotInputLadder}">
                    <Thumb DragDelta="Thumb_DragNotInputs" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-20,-20,20,20">
                                    <!-- NotInput design -->
                                    <Canvas Height="45" Width="45">
                                        <Rectangle Name="Rectangle" Height="35" Width="30" Stroke="Black" StrokeThickness="1" Fill="Black" Canvas.Top="5" Canvas.Left="8"></Rectangle>
                                        <Rectangle Height="30" Width="24" Stroke="Black" StrokeThickness="1" Fill="White" Canvas.Top="8" Canvas.Left="11"></Rectangle>
                                        <Rectangle Height="35" Width="12" Stroke="White" StrokeThickness="1" Fill="White" Canvas.Top="5" Canvas.Left="17"></Rectangle>
                                        <Line Stroke="Black" StrokeThickness="3" X1="9" Y1="40" X2="37" Y2="8"/>
                                    </Canvas>
                                    <!-- /NotInput design-->
                                    <TextBlock Canvas.Top="30" Canvas.Left="5" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>

                <!-- OutputLadder-->
                <DataTemplate DataType="{x:Type local:OutputLadder}">
                    <Thumb DragDelta="Thumb_DragOutputs" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-20,-20,20,20">
                                    <!-- Output design -->
                                    <Canvas Height="45" Width="45">
                                        <Ellipse Name="Rectangle" Height="35" Width="30" Stroke="Black"  StrokeThickness="1" Fill="Black" Canvas.Top="5" Canvas.Left="8"> </Ellipse>
                                        <Ellipse Height="30" Width="24" Stroke="Black" StrokeThickness="1" Fill="White" Canvas.Top="8" Canvas.Left="11">  </Ellipse>
                                        <Rectangle Height="36" Width="12" Stroke="White"  StrokeThickness="1" Fill="White" Canvas.Top="5" Canvas.Left="17"> </Rectangle>
                                    </Canvas>
                                    <!-- /Output design-->
                                    <TextBlock Canvas.Top="30" Canvas.Left="5" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>

                <!-- NotOutputLadder-->

                <DataTemplate DataType="{x:Type local:NotOutputLadder}">
                    <Thumb DragDelta="Thumb_DragNotOutputs" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Canvas Margin="-20,-20,20,20">
                                    <!-- NotOutput design -->
                                    <Canvas Height="45" Width="45">
                                        <Ellipse Name="Rectangle" Height="35" Width="30" Stroke="Black"  StrokeThickness="1" Fill="Black" Canvas.Top="5" Canvas.Left="8"></Ellipse>
                                        <Ellipse Height="30" Width="24" Stroke="Black" StrokeThickness="1" Fill="White" Canvas.Top="8" Canvas.Left="11"></Ellipse>
                                        <Rectangle Height="38" Width="12" Stroke="White"  StrokeThickness="1" Fill="White" Canvas.Top="4" Canvas.Left="17"></Rectangle>
                                        <Line Stroke="Black" StrokeThickness="3" X1="11" Y1="38"  X2="35" Y2="8"/>
                                    </Canvas>
                                    <!-- /NotOutput design-->
                                    <TextBlock Canvas.Top="30" Canvas.Left="5" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="30" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                </Canvas>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Red"/>
                                    </DataTrigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter TargetName="Rectangle" Property="Fill" Value="Green"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter TargetName="Rectangle" Property="StrokeThickness" Value="2"/>
                                        <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                                        <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                            <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </DataTemplate>


                <!-- This is the DataTemplate that will be used to render the Connector class -->
                
                <DataTemplate DataType="{x:Type local:Connector}">
                    <Line Stroke="Blue" StrokeThickness="3"
                            X1="{Binding Start.X}" Y1="{Binding Start.Y}"
                            X2="{Binding End.X}" Y2="{Binding End.Y}" x:Name="Line"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding End}" Value="{x:Null}">
                            <Setter TargetName="Line" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter TargetName="Line" Property="Stroke" Value="Red"/>
                            <Setter TargetName="Line" Property="StrokeDashArray" Value="2 3"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="DashAnimation">
                                    <Storyboard Duration="00:00:01" RepeatBehavior="Forever">
                                        <DoubleAnimation From="0" To="50" Storyboard.TargetName="Line" Storyboard.TargetProperty="StrokeDashOffset"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="DashAnimation"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                
            </Grid.Resources>

            <ListBox SelectedItem="{Binding SelectedObject}" 
                     PreviewMouseMove="ListBox_PreviewMouseMove"
                     PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.Template>
                    <ControlTemplate>
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="GhostWhite" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <Border>
                                    <!-- This Border serves as a background and the VisualBrush used to paint its background serves as the "Snapping Grid" -->
                                    <!-- The "Snapping" Actually occurs in the Node class (see Node.X and Node.Y properties), it has nothing to do with any UI Elements -->
                                    <Border.Background>
                                        <VisualBrush TileMode="Tile"
                                        Viewport="0,0,50,50" ViewportUnits="Absolute" 
                                        Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                                            <VisualBrush.Visual>
                                                <Rectangle Stroke="Darkgray" StrokeThickness="1" Height="50" Width="50"
                                            StrokeDashArray="5 3"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Border.Background>
                                    <ItemsPresenter/>
                                </Border>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsSource>
                    <StaticResource ResourceKey="Col"/>
                </ListBox.ItemsSource>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Name="MainCanvas" IsItemsHost="True" Background="#01FFFFFF" 
                                Height="{Binding AreaHeight}" Width="{Binding AreaWidth}"
                                VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter x:Name="Content"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Content" Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect Color="Gray" ShadowDepth="4" BlurRadius="10"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsNew}" Value="True">
                                            <Setter Property="Opacity" Value=".5"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </DockPanel>
</Window>

    